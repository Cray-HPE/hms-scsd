# Copyright 2020-2022 Hewlett Packard Enterprise Development LP

version: '3'

# Use a named network for ease in hook-up with other containers.

networks:
  ttest:
    driver: bridge


services:

  #TODO
  ## Fake State manager.  Responds to SCN subscriptions from hmnfd.
  ## This is used instead of the real State Manager for simplicity.
  #fakesm:
  #  build:
  #    context: test/integration
  #    dockerfile: Dockerfile.fake-hsm
  #  image: fake-hsm:${HTAG}_${HSUFFIX}
  #  hostname: ${FAKE_SM_HOST}
  #  container_name: ${FAKE_SM_HOST}
  #  ports:
  #    - "${FAKE_SM_PORT}:${FAKE_SM_PORT}"
  #  environment:
  #    - PORT=:${FAKE_SM_PORT}
  #  networks:
  #    - ttest
  cray-smd:
    image: artifactory.algol60.net/csm-docker/stable/cray-smd:1.48.0
    environment:
      - POSTGRES_HOST=hmsds-postgres
      - POSTGRES_PORT=5432
      - RF_MSG_HOST=kafka:9092:cray-dmtf-resource-event
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      #TODO
      - VAULT_ADDR=http://vault:8200
      #- VAULT_ADDR=http://real_vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
      - SMD_WVAULT=true
      - SMD_RVAULT=true
    hostname: cray-smd
    depends_on:
      - cray-smd-init
      #TODO
      - vault
      #- real_vault
    networks:
      - ttest
  cray-smd-init:
    image: artifactory.algol60.net/csm-docker/stable/cray-smd:1.48.0
    environment:
      - SMD_DBHOST=hmsds-postgres
      - SMD_DBPORT=5432
    depends_on:
      - hmsds-postgres
    networks:
      - ttest
    command: /entrypoint.sh smd-init
  hmsds-postgres:
    hostname: hmsds-postgres
    image: artifactory.algol60.net/docker.io/library/postgres:11-alpine
    environment:
      - POSTGRES_PASSWORD=hmsdsuser
      - POSTGRES_USER=hmsdsuser
      - POSTGRES_DB=hmsds
    networks:
      - ttest

  # A collection of 8 fake Redfish endpoints

  # x_s0 (mountain)
  x_s0:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S0_HOST}
    container_name: ${X_S0_HOST}
    ports:
      - "${X_S0_PORT}:${X_S0_PORT}"
    environment:
      - BMCPORT=:${X_S0_PORT}
      - XNAME=${X_S0_HOST}
      - NACCTS=1
      - GOODACCT=1
      - VENDOR=cray
    networks:
      - ttest

  # x_s1 (mountain)
  x_s1:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S1_HOST}
    container_name: ${X_S1_HOST}
    ports:
      - "${X_S1_PORT}:${X_S1_PORT}"
    environment:
      - BMCPORT=:${X_S1_PORT}
      - XNAME=${X_S1_HOST}
      - NACCTS=2
      - GOODACCT=2
      - ETAGACCT=2
      - BMCURL=1
      - VENDOR=HPE
    networks:
      - ttest

  # x_s2 (mountain)
  x_s2:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S2_HOST}
    container_name: ${X_S2_HOST}
    ports:
      - "${X_S2_PORT}:${X_S2_PORT}"
    environment:
      - BMCPORT=:${X_S2_PORT}
      - XNAME=${X_S2_HOST}
      - NACCTS=2
      - GOODACCT=1
      - ETAGACCT=1
      - VENDOR=cray
    networks:
      - ttest

  # x_s3 (mountain)
  x_s3:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S3_HOST}
    container_name: ${X_S3_HOST}
    ports:
      - "${X_S3_PORT}:${X_S3_PORT}"
    environment:
      - BMCPORT=:${X_S3_PORT}
      - XNAME=${X_S3_HOST}
      - NACCTS=3
      - GOODACCT=3
      - ETAGACCT=3
      - VENDOR=cray
    networks:
      - ttest

  # x_s6 (mountain, part of bmcgroup)
  x_s6:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S6_HOST}
    container_name: ${X_S6_HOST}
    ports:
      - "${X_S6_PORT}:${X_S6_PORT}"
    environment:
      - BMCPORT=:${X_S6_PORT}
      - XNAME=${X_S6_HOST}
      - NACCTS=4
      - GOODACCT=2
      - VENDOR=cray
    networks:
      - ttest

  # x_s7 (mountain, part of bmcgroup)
  x_s7:
    build:
      context: test/integration
      dockerfile: Dockerfile.fake-rfep
    image: fake-rfep:${HTAG}_${HSUFFIX}
    hostname: ${X_S7_HOST}
    container_name: ${X_S7_HOST}
    ports:
      - "${X_S7_PORT}:${X_S7_PORT}"
    environment:
      - BMCPORT=:${X_S7_PORT}
      - XNAME=${X_S7_HOST}
      - NACCTS=2
      - GOODACCT=1
      - ETAGACCT=1
      - VENDOR=cray
    networks:
      - ttest

  #TODO
  ## Fake Vault daemon
  #vault:
  #  build:
  #    context: test/integration
  #    dockerfile: Dockerfile.fake-vault
  #  image: fake-vault:${HTAG}_${HSUFFIX}
  #  hostname: ${VAULT_HOST}
  #  container_name: ${VAULT_HOST}
  #  networks:
  #    - ttest
  #TODO
  vault:
  #real_vault:
    #TODO
    hostname: vault
    #hostname: real_vault
    image: artifactory.algol60.net/docker.io/library/vault:1.5.5
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=hms
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_ADDR=http://127.0.0.1:8200
    cap_add:
      - IPC_LOCK
    networks:
      - ttest

  # SCSD
  scsd:
    build:
      context: .
      #TODO
      dockerfile: Dockerfile.testscsd
      #dockerfile: Dockerfile
      #args:
      #  IN_CRAY_VAULT_JWT_FILE: ${CRAY_VAULT_JWT_FILE}
      #  IN_CRAY_VAULT_ROLE_FILE: ${CRAY_VAULT_ROLE_FILE}
      #  IN_SCSD_TEST_K8S_AUTH_URL: ${SCSD_TEST_K8S_AUTH_URL}
      #  IN_SCSD_TEST_VAULT_PKI_URL: ${SCSD_TEST_VAULT_PKI_URL}
      #  IN_SCSD_TEST_VAULT_CA_URL: ${SCSD_TEST_VAULT_CA_URL}
    image: scsd:${HTAG}_${HSUFFIX}
    hostname: ${SCSD_HOST}
    container_name: ${SCSD_HOST}
    ports:
      #TODO
      - "${SCSD_PORT}:${SCSD_PORT}"
      #- "25309:25309"
    #TODO
    #environment:
    #  #TODO: VAULT_ENABLE=0 gets to point of running SCSD tests but doesn't find valid targets
    #  #TODO: VAULT_ENABLE=1 gets to:
    #  # msg="Connecting to Vault: Put \"https://127.0.0.1:8200/v1/auth/kubernetes/login\": dial tcp 127.0.0.1:8200: connect: connection refused -- retry in 1 second..."
    #  - VAULT_ENABLE=0
    #  #TODO
    #  #- SCSD_SMD_URL=http://${FAKE_SM_HOST}:${FAKE_SM_PORT}/hsm/v1
    #  - SCSD_SMD_URL=http://cray-smd:27779/hsm/v2
    #  - SCSD_LOG_LEVEL=TRACE
    #  - SCSD_DEFAULT_HTTP=true
    #  - SCSD_HTTP_LISTEN_PORT=:${SCSD_PORT}
    #  - IN_CRAY_VAULT_JWT_FILE=:${CRAY_VAULT_JWT_FILE}
    #  - IN_CRAY_VAULT_ROLE_FILE=:${CRAY_VAULT_ROLE_FILE}
    #  - IN_SCSD_TEST_K8S_AUTH_URL=:${SCSD_TEST_K8S_AUTH_URL}
    #  - IN_SCSD_TEST_VAULT_PKI_URL=:${SCSD_TEST_VAULT_PKI_URL}
    #  - IN_SCSD_TEST_VAULT_CA_URL=:${SCSD_TEST_VAULT_CA_URL}
    #TODO
    depends_on:
      - cray-smd
      #- cray-hms-hmcollector
      #- redfish-simulator
      - vault-kv-enabler
    networks:
      - ttest
    #TODO
    environment:
      - SCSD_SMD_URL=http://cray-smd:27779/hsm/v2
      - SCSD_HTTP_LISTEN_PORT=25309
      - SCSD_LOCAL_MODE=true
      - CRAY_VAULT_AUTH_PATH=auth/token/create
      - CRAY_VAULT_ROLE_FILE=configs/namespace
      - CRAY_VAULT_JWT_FILE=configs/token
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - VAULT_KEYPATH=hms-creds
  vault-kv-enabler:
    image: artifactory.algol60.net/csm-docker/stable/vault-kv-enabler:1.13.4
    environment:
      - VAULT_ADDR=http://vault:8200
      - VAULT_TOKEN=hms
      - KV_STORES=hms-creds
    depends_on:
      - vault
    networks:
      - ttest
      #TODO
      #- scsd
